{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropzone",
  "type": "registry:ui",
  "title": "Dropzone",
  "description": "A dropzone is an area into which one or multiple objects can be dragged and dropped.",
  "dependencies": [
    "@radix-ui/react-primitive"
  ],
  "registryDependencies": [
    "https://ui-x.junwen-k.dev/r/dropzone-primitive.json"
  ],
  "files": [
    {
      "path": "src/registry/new-york/ui/dropzone.tsx",
      "content": "\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Ban, CheckCircle2, Upload } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as DropzonePrimitive from \"@/registry/new-york/ui/dropzone-primitive\";\n\nfunction Dropzone(props: React.ComponentProps<typeof DropzonePrimitive.Root>) {\n  return <DropzonePrimitive.Root data-slot=\"dropzone\" {...props} />;\n}\n\nfunction DropzoneInput(\n  props: React.ComponentProps<typeof DropzonePrimitive.Input>,\n) {\n  return <DropzonePrimitive.Input data-slot=\"dropzone-input\" {...props} />;\n}\n\nfunction DropzoneZone({\n  className,\n  ...props\n}: React.ComponentProps<typeof DropzonePrimitive.Zone>) {\n  return (\n    <DropzonePrimitive.Zone\n      data-slot=\"dropzone-zone\"\n      className={cn(\n        \"border-input hover:border-accent-foreground/50 hover:bg-accent focus-visible:ring-ring data-[drag-active]:border-accent-foreground/50 data-[drag-reject]:border-destructive data-[drag-active]:bg-accent data-[drag-reject]:bg-destructive/30 cursor-pointer rounded-md border-2 border-dashed p-6 shadow-sm transition-colors focus-visible:ring-1 focus-visible:outline-none data-[disabled]:cursor-not-allowed data-[disabled]:border-inherit data-[disabled]:bg-inherit data-[disabled]:opacity-50 data-[drag-reject]:cursor-no-drop data-[no-click]:cursor-default\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DropzoneUploadIcon({\n  className,\n  ...props\n}: React.ComponentProps<typeof Upload>) {\n  return (\n    <>\n      <DropzonePrimitive.DragAccepted>\n        <CheckCircle2\n          data-slot=\"dropzone-upload-icon-accepted\"\n          className={cn(\"size-8\", className)}\n          {...props}\n        />\n      </DropzonePrimitive.DragAccepted>\n      <DropzonePrimitive.DragRejected>\n        <Ban\n          data-slot=\"dropzone-upload-icon-rejected\"\n          className={cn(\"size-8\", className)}\n          {...props}\n        />\n      </DropzonePrimitive.DragRejected>\n      <DropzonePrimitive.DragDefault>\n        <Upload\n          data-slot=\"dropzone-upload-icon-default\"\n          className={cn(\"size-8\", className)}\n          {...props}\n        />\n      </DropzonePrimitive.DragDefault>\n    </>\n  );\n}\n\nfunction DropzoneGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Primitive.div>) {\n  return (\n    <Primitive.div\n      data-slot=\"dropzone-group\"\n      className={cn(\"grid place-items-center gap-1.5\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropzoneTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof Primitive.h3>) {\n  return (\n    <Primitive.h3\n      data-slot=\"dropzone-title\"\n      className={cn(\"leading-none font-medium tracking-tight\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropzoneDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof Primitive.p>) {\n  return (\n    <Primitive.p\n      data-slot=\"dropzone-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DropzoneTrigger(\n  props: React.ComponentProps<typeof DropzonePrimitive.Trigger>,\n) {\n  return <DropzonePrimitive.Trigger data-slot=\"dropzone-trigger\" {...props} />;\n}\n\nfunction DropzoneAccepted(\n  props: React.ComponentProps<typeof DropzonePrimitive.Accepted>,\n) {\n  return (\n    <DropzonePrimitive.Accepted data-slot=\"dropzone-accepted\" {...props} />\n  );\n}\n\nfunction DropzoneRejected(\n  props: React.ComponentProps<typeof DropzonePrimitive.Rejected>,\n) {\n  return (\n    <DropzonePrimitive.Rejected data-slot=\"dropzone-rejected\" {...props} />\n  );\n}\n\nexport {\n  Dropzone,\n  DropzoneInput,\n  DropzoneZone,\n  DropzoneUploadIcon,\n  DropzoneGroup,\n  DropzoneTitle,\n  DropzoneDescription,\n  DropzoneTrigger,\n  DropzoneAccepted,\n  DropzoneRejected,\n};\n",
      "type": "registry:ui"
    }
  ]
}