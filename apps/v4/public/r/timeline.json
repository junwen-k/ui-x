{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "timeline",
  "type": "registry:ui",
  "title": "Timeline",
  "description": "Timeline displays a list of events in chronological order.",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "src/registry/new-york/ui/timeline.tsx",
      "content": "\"use client\";\n\nimport { Slot } from \"@radix-ui/react-slot\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype TimelineContextProps = {\n  orientation: \"horizontal\" | \"vertical\";\n};\n\nconst TimelineContext = React.createContext<TimelineContextProps | null>(null);\n\nfunction useTimeline() {\n  const context = React.useContext(TimelineContext);\n  if (!context) {\n    throw new Error(\"useTimeline must be used within a <Timeline />.\");\n  }\n\n  return context;\n}\n\nexport interface TimelineProps extends React.ComponentPropsWithoutRef<\"ol\"> {\n  orientation?: \"horizontal\" | \"vertical\";\n}\n\nfunction Timeline({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: TimelineProps) {\n  return (\n    <TimelineContext value={{ orientation }}>\n      <ol\n        data-slot=\"timeline\"\n        role=\"list\"\n        data-orientation={orientation}\n        className={cn(\n          \"flex\",\n          orientation === \"vertical\" && \"flex-col\",\n          className,\n        )}\n        {...props}\n      />\n    </TimelineContext>\n  );\n}\n\nexport interface TimelineItemProps\n  extends React.ComponentPropsWithoutRef<\"li\"> {\n  asChild?: boolean;\n}\n\nfunction TimelineItem({ className, asChild, ...props }: TimelineItemProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"li\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-item\"\n      data-orientation={orientation}\n      className={cn(\n        \"flex gap-4\",\n        orientation === \"horizontal\" && \"flex-col\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport interface TimelineSeparatorProps\n  extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nfunction TimelineSeparator({\n  className,\n  asChild,\n  ...props\n}: TimelineSeparatorProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-separator\"\n      data-orientation={orientation}\n      className={cn(\n        \"flex items-center\",\n        orientation === \"vertical\" && \"flex-col\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport interface TimelineDotProps\n  extends React.ComponentPropsWithoutRef<\"div\"> {\n  variant?: \"default\" | \"outline\";\n  asChild?: boolean;\n}\n\nfunction TimelineDot({\n  variant = \"default\",\n  className,\n  asChild,\n  ...props\n}: TimelineDotProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-dot\"\n      data-orientation={orientation}\n      className={cn(\n        \"flex size-4 items-center justify-center empty:after:block empty:after:rounded-full empty:after:outline-current [&_svg:not([class*='size-'])]:size-4\",\n        orientation === \"vertical\" && \"mt-1\",\n        variant === \"default\" && \"empty:after:size-2.5 empty:after:bg-current\",\n        variant === \"outline\" && \"empty:after:size-2 empty:after:outline\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport interface TimelineConnectorProps\n  extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nfunction TimelineConnector({\n  className,\n  asChild,\n  ...props\n}: TimelineConnectorProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-connector\"\n      data-orientation={orientation}\n      className={cn(\n        \"bg-border flex-1\",\n        orientation === \"vertical\" && \"my-2 w-0.5\",\n        orientation === \"horizontal\" && \"mx-2 h-0.5\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport interface TimelineContentProps\n  extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nfunction TimelineContent({\n  className,\n  asChild,\n  ...props\n}: TimelineContentProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-content\"\n      data-orientation={orientation}\n      className={cn(\n        \"flex-1\",\n        orientation === \"vertical\" && \"pb-7 first:text-right last:text-left\",\n        orientation === \"horizontal\" && \"pr-7\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport interface TimelineTitleProps\n  extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nfunction TimelineTitle({ className, asChild, ...props }: TimelineTitleProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-title\"\n      data-orientation={orientation}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport interface TimelineDescriptionProps\n  extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean;\n}\n\nfunction TimelineDescription({\n  className,\n  asChild,\n  ...props\n}: TimelineDescriptionProps) {\n  const { orientation } = useTimeline();\n  const Comp = asChild ? Slot : \"div\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-description\"\n      data-orientation={orientation}\n      className={cn(\"text-muted-foreground text-[0.8em]\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Timeline,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineDot,\n  TimelineConnector,\n  TimelineContent,\n  TimelineTitle,\n  TimelineDescription,\n  useTimeline,\n};\n",
      "type": "registry:ui"
    }
  ]
}