{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-input-primitive",
  "type": "registry:ui",
  "title": "Password Input Primitive",
  "description": "Password Input provides a way for the user to securely enter a password, with the ability to toggle the visibility of the password.",
  "dependencies": [
    "@radix-ui/primitive@1.1.2",
    "@radix-ui/react-primitive@2.1.2",
    "@radix-ui/react-use-controllable-state@1.2.2"
  ],
  "files": [
    {
      "path": "src/registry/new-york/ui/password-input-primitive.tsx",
      "content": "\"use client\";\n\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport * as React from \"react\";\n\nexport type PasswordInputContextProps = Required<\n  Pick<PasswordInputProps, \"visible\" | \"onVisibleChange\">\n>;\n\nconst PasswordInputContext = React.createContext<PasswordInputContextProps>({\n  visible: false,\n  onVisibleChange: () => {},\n});\n\nfunction usePasswordInput() {\n  const context = React.useContext(PasswordInputContext);\n  if (!context) {\n    throw new Error(\n      \"usePasswordInput must be used within a <PasswordInput />.\",\n    );\n  }\n\n  return context;\n}\n\nexport interface PasswordInputProps {\n  visible?: boolean;\n  defaultVisible?: boolean;\n  onVisibleChange?: (visible: boolean) => void;\n  children?: React.ReactNode;\n}\n\nfunction PasswordInput({\n  visible: visibleProp,\n  defaultVisible,\n  onVisibleChange,\n  children,\n}: PasswordInputProps) {\n  const [visible, setVisible] = useControllableState({\n    prop: visibleProp,\n    defaultProp: defaultVisible ?? false,\n    onChange: onVisibleChange,\n  });\n\n  return (\n    <PasswordInputContext.Provider\n      value={{\n        visible,\n        onVisibleChange: setVisible,\n      }}\n    >\n      {children}\n    </PasswordInputContext.Provider>\n  );\n}\n\nfunction PasswordInputInput(\n  props: React.ComponentProps<typeof Primitive.input>,\n) {\n  const { visible } = usePasswordInput();\n\n  return (\n    <Primitive.input\n      data-slot=\"password-input-input\"\n      type={visible ? \"text\" : \"password\"}\n      {...props}\n    />\n  );\n}\n\nfunction PasswordInputToggle({\n  type = \"button\",\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Primitive.button>) {\n  const { visible, onVisibleChange } = usePasswordInput();\n\n  return (\n    <Primitive.button\n      data-slot=\"password-input-toggle\"\n      type={type}\n      data-state={visible ? \"visible\" : \"hidden\"}\n      onClick={composeEventHandlers(onClick, () => onVisibleChange(!visible))}\n      {...props}\n    />\n  );\n}\n\nfunction PasswordInputIndicator({\n  ...props\n}: React.ComponentProps<typeof Primitive.span>) {\n  const { visible } = usePasswordInput();\n\n  return (\n    <Primitive.span\n      data-slot=\"password-input-indicator\"\n      aria-hidden=\"true\"\n      data-state={visible ? \"visible\" : \"hidden\"}\n      {...props}\n    />\n  );\n}\n\nexport {\n  PasswordInput as Root,\n  PasswordInputInput as Input,\n  PasswordInputToggle as Toggle,\n  PasswordInputIndicator as Indicator,\n};\n",
      "type": "registry:ui"
    }
  ]
}